[DEFAULT]

    # maximum data rows
    # to be processed
    # 0 means unlimited
    maxRows = 100

    # show progress messages
    # every 'flushCount' number
    # of data rows
    flushCount = 10000
    
    # maximum allowed column
    # count mismatches before
    # terminating the program
    maxColCountMisMatches = 0
    
    # maximum number of HTML value
    # frequencies per column to report
    maxHtmlCount = 5
    
    # maximum number of JDBC value
    # frequencies per column to report
    maxJdbcCount = 10
    
    # the date of execution's output format string    
    runDateFormatString = %A %d %b %Y %I:%M %p %Z
    
    # MAKO template path
    # for HTML output generation
    makoHtmlTemplateName = DqsStatsHtml.mako

    # MAKO template path
    # for JDBC output generation
    makoJdbcTemplateName = DqsStatsJdbc.mako

[folders]
    
    # parent folder
    outFolder = ~/temp
    # for the following subfolders
    logSubFolder = logFiles
    tgtSubFolder = tgtFiles

[srcSpecs]
    
    # srcFullPath = '~/data/voters/nc/ncvoter48.txt'
    srcFullPath = ~/data/apcd/NPPES_Data_Dissemination_November_2014/npidata_20050523-20141112.csv
    srcDelim = ,
    srcHeaderRows = 1

    # data provider's acronym    
    dataProvider = NPPES
    
    # comma-delimited list of columns upon
    # which statistics are to be calculated,
    # an empty ACCEPT list will signal the
    # processing of ALL of the row's columns
    acceptColNames = 
    # acceptColNames = NPI,Entity Type Code,Replacement NPI,Employer Identification Number (EIN)
    
    # comma-delimited IGNORE list will suppress calculations
    # of the value frequency statistics for the specified columns
    # ignoreColNames = 'voter_reg_num','ncid'
    ignoreColNames = Entity Type Code
    
    # comma-delimited UNIQUE list will suppress calculations
    # of the value frequency statistics for the specified columns
    # uniqueColNames = 'voter_reg_num','ncid'
    uniqueColNames = NPI

[logging]

    # the log file's base name    
    logFileName = PyDqsStatsGen.log
    
    # maximum standard out
    # logging level value
    maxStdOutLvl = INFO

[jdbcSpecs]
    
    # PostgreSQL parameters
    jdbcType = pgsql
    jdbcHost = localhost
    jdbcPort = 5432
    jdbcDatabase = dqsvalidator
    jdbcUID = dqsvalidator
    jdbcPWD = [redacted]
    jdbcDropTableIfExistsCompliant = True
    
    # MySQL parameters
#    jdbcType = mysql
#    jdbcHost = localhost
#    jdbcPort = 3306
#    jdbcDatabase = dqsvalidator
#    jdbcUID = dqsvalidator
#    jdbcPWD = [redacted]
#    jdbcDropTableIfExistsCompliant = True
#    
#    # SQL Server parameters
#    jdbcType = mssql
#    jdbcHost = Khepry-ASUS-LT1
#    jdbcPort = 1433
#    jdbcDatabase = dqsvalidator
#    jdbcUID = dqsvalidator
#    jdbcPWD = [redacted]
#    jdbcDropTableIfExistsCompliant = False
